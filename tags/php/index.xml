<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on i-cooltea的博客</title>
    <link>http://i-cooltea.github.io/tags/php/</link>
    <description>Recent content in php on i-cooltea的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 20 Aug 2019 10:04:37 +0000</lastBuildDate>
    
	<atom:link href="http://i-cooltea.github.io/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PHP 拓扑排序</title>
      <link>http://i-cooltea.github.io/posts/php-%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Tue, 20 Aug 2019 10:04:37 +0000</pubDate>
      
      <guid>http://i-cooltea.github.io/posts/php-%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</guid>
      <description>class TopologicalGraph { private $V; // 顶点个数 private $inDegree; // 记录每个顶点的入度 private $free = []; // 维护一个入度为0的集合 private $adj = []; // 邻接表 private $nodes = []; // 所有节点 /*public function __construct($V) { $this-&amp;gt;V = $V; for ($i = 0; $i &amp;lt; $V; ++$i) $this-&amp;gt;inDegree[$i] = 0; }*/ public function __construct(array $graph) { foreach ($graph as $line) { $from = $line[0]; $to = $line[1]; $this-&amp;gt;addEdge($from, $to); } $this-&amp;gt;nodes = array_unique($this-&amp;gt;nodes); $this-&amp;gt;V = count($this-&amp;gt;nodes); } public function addEdge($from, $to) { if (!</description>
    </item>
    
    <item>
      <title>composer安装</title>
      <link>http://i-cooltea.github.io/posts/composer%E5%AE%89%E8%A3%85/</link>
      <pubDate>Mon, 25 Jun 2018 06:14:00 +0000</pubDate>
      
      <guid>http://i-cooltea.github.io/posts/composer%E5%AE%89%E8%A3%85/</guid>
      <description>###linux 安装 官网下载：https://getcomposer.org/ 得到一个composer.phar文件。
###全局安装 将下载下来的composer.phar文件移动到/usr/local/bin/目录下。
###局部安装 将下载下来的composer.phar文件移动到项目文件内。
###win 安装 找到并进入 PHP 的安装目录（和你在命令行中执行的 php 指令应该是同一套 PHP）。 将 composer.phar 复制到 PHP 的安装目录下面，也就是和 php.exe 在同一级目录。 在 PHP 安装目录下新建一个 composer.bat 文件，并将下列代码保存到此文件中。运行bat文件。 @php &amp;ldquo;%~dp0composer.phar&amp;rdquo; %*
###composer速度慢 使用国内镜像。国内镜像地址：http://pkg.phpcomposer.com/ 使用方式：
composer config -g repo.packagist composer https://packagist.phpcomposer.com
上面命令执行之后会在composer.json里面添加镜像的配置信息。
&amp;quot;repositories&amp;quot;: { &amp;quot;packagist&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;composer&amp;quot;, &amp;quot;url&amp;quot;: &amp;quot;https://packagist.phpcomposer.com&amp;quot; } }  测试镜像可用，速度可。</description>
    </item>
    
    <item>
      <title>php 二维数组按键值排序 array_multisort</title>
      <link>http://i-cooltea.github.io/posts/php-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E6%8C%89%E9%94%AE%E5%80%BC%E6%8E%92%E5%BA%8F-array_multisort/</link>
      <pubDate>Tue, 20 Mar 2018 10:38:00 +0000</pubDate>
      
      <guid>http://i-cooltea.github.io/posts/php-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E6%8C%89%E9%94%AE%E5%80%BC%E6%8E%92%E5%BA%8F-array_multisort/</guid>
      <description>1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29   $arr=[  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;name&amp;rsquo;=&amp;gt;&amp;lsquo;小坏龙&amp;rsquo;,  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;age&amp;rsquo;=&amp;gt;28  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;),  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;name&amp;rsquo;=&amp;gt;&amp;lsquo;小坏龙2&amp;rsquo;,  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;age&amp;rsquo;=&amp;gt;14  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;),  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;name&amp;rsquo;=&amp;gt;&amp;lsquo;小坏龙3&amp;rsquo;,  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;age&amp;rsquo;=&amp;gt;59  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;),  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;name&amp;rsquo;=&amp;gt;&amp;lsquo;小坏龙4&amp;rsquo;,  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;age&amp;rsquo;=&amp;gt;23  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;),  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;name&amp;rsquo;=&amp;gt;&amp;lsquo;小坏龙5&amp;rsquo;,  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;age&amp;rsquo;=&amp;gt;23  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;),  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;array(  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;name&amp;rsquo;=&amp;gt;&amp;lsquo;小坏龙6&amp;rsquo;,  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lsquo;age&amp;rsquo;=&amp;gt;21  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;),  ];  &amp;nbsp;  array_multisort(array_column($arr,&amp;lsquo;age&amp;rsquo;),SORT_DESC,$arr);  print_r($arr);          其中 &amp;nbsp;array_column(数组,数组中的某个键值) &amp;nbsp;从多维数组中取出某个键值的一列 &amp;nbsp;返回一个一维数组； array_multisort(数组(一维数组),排序方式(SOTR_ASC,SOTR_DESC),其他数组(可以是二维的))</description>
    </item>
    
    <item>
      <title>Xdebug安装教程</title>
      <link>http://i-cooltea.github.io/posts/xdebug%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sun, 04 Mar 2018 13:34:00 +0000</pubDate>
      
      <guid>http://i-cooltea.github.io/posts/xdebug%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</guid>
      <description>参考链接 : Xdebug+PhpStorm 远程调试
在Ubuntu 14.04下的PhpStorm中配置xdebug调试环境
PHPStorm Xdebug Remote 调试环境搭建（不依赖本地环境）
1. 安装xdebug 得到本地phpinfo 配置信息
将打印信息拷贝并复制到 http://xdebug.org/wizard.php 这个页面提供的一个textarea中. 然后点击下方的Analyze按钮, 它会自动帮你解析你本地的PHP环境信息从而 得到你需要下载的xdebug版本和相关配置指令.
2. 得到需要下载的版本和相关指令 比如, 我得到的信息如下:
下载 xdebug-2.3.2.tgz (下载地址直接点击生成的链接) 解压缩文件： tar -xvzf xdebug-2.3.2.tgz 运行: cd xdebug-2.3.2 运行: phpize (See the FAQ if you don’t have phpize. 部分输出如下所示: Configuring for: … Zend Module Api No: 20121212 Zend Extension Api No: 220121212 如果没有以上输出, 那么代表你的phpize有问题. 参考FAQ.
运行: ./configure
运行: make 运行: sudo cp modules/xdebug.so /usr/lib/php5/20121212 在php.</description>
    </item>
    
    <item>
      <title>php---面试题---</title>
      <link>http://i-cooltea.github.io/posts/php-%E9%9D%A2%E8%AF%95%E9%A2%98-/</link>
      <pubDate>Sun, 04 Mar 2018 13:32:00 +0000</pubDate>
      
      <guid>http://i-cooltea.github.io/posts/php-%E9%9D%A2%E8%AF%95%E9%A2%98-/</guid>
      <description>尽量涵盖，这里只写关于PHP的，基础肯定是各种字符串操作，数组操作，然后面向对象的理解。其实这里面好多好多东西都是平时用不到的，但这就是基础，面试官问到的东西只是你知道的很少很少一部分，但这就是你们交涉的全部所以还你是得让自己尽可能知道的多。写这些东西没有应试教育的意思，虽然有的东西平时不会用，但对你绝对都是有帮助的
1 PHP是用什么语言编写的
php是用c写的
扩展：php3 php4 php5的主要区别是什么，php6的新特征有哪些？
这个问题真恶心，等我以后心情好了在回答吧
2 目前PHP的最高版本是
2013.9.12现在应该是php5.5
3 PHP的三种注释方式
天啊，我竟然知道两种，太可怕了 # 竟然也是 好吧
4 请列出PHP的8种数据类型
字符串 数组 对象 数值类型 整型 xml 浮点 布尔值 特殊的有Null和resource(说实话我只用过前五种)
5 PHP中有几种形式装载代码，并列举，以包含同目录下的Config.php文件为例？
require include require_once include_once
require一般用在文件的头部包含文件，执行php时包含这个文件使它成为php的一部分
include一般用在流程控制中，用到时再包含
区别是require遇到错误不会往下执行，而include会继续执行
require_once和include_once的作用是避免重复包含，也就是说如果不小心包含了同一个文件，用这两个函数会只包含一次
6 PHP中===表示什么意思，以及与==的区别，什么情况下==是true,===是false
这个问题也是比较常见的，不过巨简单。==是比较表达式两边的值，而===会比较数据类型，比如a=1;b = ‘1’; ==的话就为true,但===就为false，因为数据类型不同
7 header的作用是什么，以及它的限制
sorry，这个需要先看http协议，等有功夫在回答这个问题，目前只知道这是做跳转用的
8 strstr和stristr的区别
这种字符串操作的方法但凡加了i的一般都是不区分大小写的意思。这里在普及一下strstr的做用吧，strstr默认返回从指定字符到该字符串结束的字符
9 php如何获得浏览器信息
看吧，php能做的事还是不少的，哎，我这么说会不会暴露了我的知识面比较窄的缺陷呢，哈哈
$_SERVER[‘HTTP_USER_AGENT’];平时没用过这些东西
10 什么是URLRewriteing
说说我自己的理解吧，就是伪静态嘛！通过隐藏网页的访问地址以达到更好收录的的效果，可能有不对的地方，欢迎拍砖
11 如何遍历一个文件夹下所有的内容（考中几率非常高）
以前我都嫌麻烦，不去记这些东西，而且平时用的话我都是从网上搜索，但笔试的时候肯定不能让你从网上搜虽然这东西经常被考到，但我可以确定的是你写不出来对你影响不会很大，当然写出来了更好，之前我欧诺个的都是什么opendir 之类的这些傻×函数，刚才我知道了scandir这个函数，这是循环遍历文件夹的函数，非常实用奥
[php] view plain copy&amp;nbsp;在CODE上查看代码片派生到我的代码片
&amp;lt;?php $dir = &#34;.&#34;; //当前目录 list_file($dir); function list_file($dir){ $list = scandir($dir); // 得到该文件下的所有文件和文件夹 foreach($list as $file){//遍历 $file_location=$dir.</description>
    </item>
    
    <item>
      <title>PHP相关的有参考价值的社区,博客,网站,文章,书籍,视频等资源</title>
      <link>http://i-cooltea.github.io/posts/php%E7%9B%B8%E5%85%B3%E7%9A%84%E6%9C%89%E5%8F%82%E8%80%83%E4%BB%B7%E5%80%BC%E7%9A%84%E7%A4%BE%E5%8C%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%96%87%E7%AB%A0%E4%B9%A6%E7%B1%8D%E8%A7%86%E9%A2%91%E7%AD%89%E8%B5%84%E6%BA%90/</link>
      <pubDate>Sun, 04 Mar 2018 13:30:00 +0000</pubDate>
      
      <guid>http://i-cooltea.github.io/posts/php%E7%9B%B8%E5%85%B3%E7%9A%84%E6%9C%89%E5%8F%82%E8%80%83%E4%BB%B7%E5%80%BC%E7%9A%84%E7%A4%BE%E5%8C%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%96%87%E7%AB%A0%E4%B9%A6%E7%B1%8D%E8%A7%86%E9%A2%91%E7%AD%89%E8%B5%84%E6%BA%90/</guid>
      <description>PHP相关的有参考价值的社区,博客,网站,文章,书籍,视频等资源  PHP网站(PHP Websites) PHP The Right Way&amp;nbsp;- 一个PHP实践的快速参考指导  PHP Best Practices&amp;nbsp;- 一个PHP最佳实践 &amp;nbsp; &amp;nbsp;-&amp;nbsp;Clean Code PHP&amp;nbsp;- 一个PHP 编码标准 &amp;nbsp; &amp;nbsp;-&amp;nbsp;PHP Weekly News&amp;nbsp;- 一个PHP 周刊  Securing PHP&amp;nbsp;- 有关PHP安全相关  PHP FIG&amp;nbsp;- PHP框架交互小组 PSR 中文翻译    PHP School&amp;nbsp;- 一个开源的PHP学习资源  PHPTrends&amp;nbsp;- 一些快速发展的PHP类库检索  PHP 开发者实践    其他网站(Other Websites) The Open Web Application Security Project (OWASP)&amp;nbsp;- 一个开源软件安全社区  WebSec IO&amp;nbsp;- 一个web 安全社区  Semantic Versioning&amp;nbsp;- 语义化版本  Atlassian Git Tutorials&amp;nbsp;- 一系列的Git教程  Servers for Hackers&amp;nbsp;- 有关服务器运维相关  be-a-professional-programmer&amp;nbsp;- 成为专业程序员路上用到的各种优秀资料、神器及框架    PHP书籍(PHP Books) Modern PHP&amp;nbsp;- 作者是PHP 之道的发起人和Slim框架的作者 Modern PHP（中文版）    PHP Pandas  ppts_for_php2017&amp;nbsp;- 2017 第三届PHP全球开发者大会PPT/Keynote    其他书籍(Other Books) The Linux Command Line&amp;nbsp;- Linux 命令行教程     依赖管理( Dependency Management ) 用于依赖管理的包和框架  Composer&amp;nbsp;/&amp;nbsp;Packagist&amp;nbsp;- 一个包和依赖管理器.</description>
    </item>
    
    <item>
      <title>2017最新PHP初级经典面试题目汇总（下篇）</title>
      <link>http://i-cooltea.github.io/posts/2017%E6%9C%80%E6%96%B0php%E5%88%9D%E7%BA%A7%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E6%B1%87%E6%80%BB%E4%B8%8B%E7%AF%87/</link>
      <pubDate>Mon, 26 Feb 2018 11:58:00 +0000</pubDate>
      
      <guid>http://i-cooltea.github.io/posts/2017%E6%9C%80%E6%96%B0php%E5%88%9D%E7%BA%A7%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E6%B1%87%E6%80%BB%E4%B8%8B%E7%AF%87/</guid>
      <description>17、isset、empty、is_null的区别   isset 判断变量是否定义或者是否为空    &amp;nbsp; 变量存在返回ture，否则返回false  &amp;nbsp; 变量定义不赋值返回false  &amp;nbsp; unset一个变量，返回false  &amp;nbsp; 变量赋值为null，返回false  &amp;nbsp;&amp;nbsp;  empty：判断变量的值是否为空，能转换为false的都是空，为空返回true，反之返回false。    &amp;nbsp; &amp;nbsp; &amp;ldquo;&amp;rdquo;,0,&amp;ldquo;0&amp;rdquo;,NULL，FALSE都认为为空，返回true  &amp;nbsp; &amp;nbsp; 没有任何属性的对象都认为是空  &amp;nbsp; &amp;nbsp;&amp;nbsp;  is_null：检测传入的值(值、变量、表达式)是否为null    &amp;nbsp; &amp;nbsp; 定义了，但是赋值为Null  &amp;nbsp; &amp;nbsp; 定义了，但是没有赋值  &amp;nbsp; &amp;nbsp; unset一个变量  18、前端调试的工具    Firefox的firebug  Chrome的开发工具  Emmet  JSON格式校验工具  19. 简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）    索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。  普通索引(由关键字KEY或INDEX定义的索引)的唯一任务是加快对数据的访问速度。  普通索引允许被索引的数据列包含重复的值。如果能确定某个数据列将只包含彼此各不相同的值，在为这个数据列创建索引的时候就应该用关键字UNIQUE把它定义为一个唯一索引。也就是说，唯一索引可以保证数据记录的唯一性。  主键，是一种特殊的唯一索引，在一张表中只能定义一个主键索引，主键用于唯一标识一条记录，使用关键字 PRIMARY KEY 来创建。  索引可以覆盖多个数据列，如像INDEX(columnA, columnB)索引，这就是联合索引。  索引可以极大的提高数据的查询速度，但是会降低插入、删除、更新表的速度，因为在执行这些写操作时，还要操作索引文件。    20.</description>
    </item>
    
    <item>
      <title>2017最新PHP经典面试题目汇总（上篇）</title>
      <link>http://i-cooltea.github.io/posts/2017%E6%9C%80%E6%96%B0php%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E6%B1%87%E6%80%BB%E4%B8%8A%E7%AF%87/</link>
      <pubDate>Mon, 26 Feb 2018 11:33:00 +0000</pubDate>
      
      <guid>http://i-cooltea.github.io/posts/2017%E6%9C%80%E6%96%B0php%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E6%B1%87%E6%80%BB%E4%B8%8A%E7%AF%87/</guid>
      <description>1、双引号和单引号的区别    双引号解释变量，单引号不解释变量  双引号里插入单引号，其中单引号里如果有变量的话，变量解释  双引号的变量名后面必须要有一个非数字、字母、下划线的特殊字符，或者用讲变量括起来，否则会将变量名后面的部分当做一个整体，引起语法错误  双引号解释转义字符，单引号不解释转义字符，但是解释&#39;\和\\  能使单引号字符尽量使用单引号，单引号的效率比双引号要高（因为双引号要先遍历一遍，判断里面有没有变量，然后再进行操作，而单引号则不需要判断）  2、常用的超全局变量(8个)    $_GET -----&amp;gt;get传送方式  $_POST -----&amp;gt;post传送方式  $_REQUEST -----&amp;gt;可以接收到get和post两种方式的值  $GLOBALS -----&amp;gt;所有的变量都放在里面  $_FILE -----&amp;gt;上传文件使用  $_SERVER -----&amp;gt;系统环境变量  $_SESSION -----&amp;gt;会话控制的时候会用到  $_COOKIE -----&amp;gt;会话控制的时候会用到  3、HTTP中POST、GET、PUT、DELETE方式的区别    HTTP定义了与服务器交互的不同的方法，最基本的是POST、GET、PUT、DELETE，与其比不可少的URL的全称是资源描述符，我们可以这样理解：url描述了一个网络上资源，而post、get、put、delegate就是对这个资源进行增、删、改、查的操作！    3.1表单中get和post提交方式的区别    get是把参数数据队列加到提交表单的action属性所指的url中，值和表单内各个字段一一对应，从url中可以看到；post是通过HTTPPOST机制，将表单内各个字段与其内容防止在HTML的head中一起传送到action属性所指的url地址，用户看不到这个过程  对于get方式，服务器端用Request.QueryString获取变量的值，对于post方式，服务器端用Request.Form获取提交的数据  get传送的数据量较小，post传送的数据量较大，一般被默认不受限制，但在理论上，IIS4中最大量为80kb，IIS5中为1000k，get安全性非常低，post安全性较高  3.2    GET请求会向数据库发索取数据的请求，从而来获取信息，该请求就像数据库的select操作一样，只是用来查询一下数据，不会修改、增加数据，不会影响资源的内容，即该请求不会产生副作用。无论进行多少次操作，结果都是一样的。    与GET不同的是，PUT请求是向服务器端发送数据的，从而改变信息，该请求就像数据库的update操作一样，用来修改数据的内容，但是不会增加数据的种类等，也就是说无论进行多少次PUT操作，其结果并没有不同。    POST请求同PUT请求类似，都是向服务器端发送数据的，但是该请求会改变数据的种类等资源，就像数据库的insert操作一样，会创建新的内容。几乎目前所有的提交操作都是用POST请求的。    DELETE请求顾名思义，就是用来删除某一个资源的，该请求就像数据库的delete操作。    4、PHP介绍    Hypertext Preprocessor----超文本预处理器    Personal Home Page 原始名称    目标用途: 允许web开发人员快速编写动态生成的web页面，与其他页面相比，PHP是将程序嵌入到HTML文档中去执行，效率比完全生成HTML编辑的CGI高很多    HTML: Hypertext Markup Language    创始人: 拉姆斯勒·勒多夫Rasmus Lerdorf，1968年生，加拿大滑铁卢大学    勒多夫最开始是为了维护个人网页，用prel语言写了维护程序，之后又用c进行了重写，最终衍生出php/fi    时间轴:    1995.</description>
    </item>
    
  </channel>
</rss>