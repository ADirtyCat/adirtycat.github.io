<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on i-cooltea的博客</title>
    <link>http://i-cooltea.github.io/tags/python/</link>
    <description>Recent content in python on i-cooltea的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 24 Feb 2018 10:11:00 +0000</lastBuildDate>
    
	<atom:link href="http://i-cooltea.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>学习 Python 编程的 19 个资源</title>
      <link>http://i-cooltea.github.io/posts/%E5%AD%A6%E4%B9%A0-python-%E7%BC%96%E7%A8%8B%E7%9A%84-19-%E4%B8%AA%E8%B5%84%E6%BA%90/</link>
      <pubDate>Sat, 24 Feb 2018 10:11:00 +0000</pubDate>
      
      <guid>http://i-cooltea.github.io/posts/%E5%AD%A6%E4%B9%A0-python-%E7%BC%96%E7%A8%8B%E7%9A%84-19-%E4%B8%AA%E8%B5%84%E6%BA%90/</guid>
      <description>编译：wzhvictor，英文：codecondo  segmentfault.com/a/1190000004187319  用Python编写代码一点都不难，事实上它一直被赞誉为最容易学的编程语言。如果你准备学习web开发， Python是一个不错的开始，甚至想做游戏的话，用Python来开发游戏的资源也有很多。这是快速学习这门语言的途径之一。 许多程序员都把Python作为编程之旅的开始，然后是像PHP和Ruby这样的语言。它也是2014年最热门的web开发语言之一，并极力推荐学习。但是，Python应该怎么学呢？应该从哪里开始？ 我来为你解决这个问题，因为我自己学习编程和开始做开发的时候也依靠了很多这里的资源。当然这仅仅是一个友好的建议，最好的方法还是通过实践去学习，这里推荐的一些书和资源只是为了指引你走往正确的方向。 刚开始学习的时候可能会特别令人沮丧，一旦你学完了基础，之后的东西对你来说就很自然了，你都不需要思考就知道要怎么做。 Python for Beginners 如果你的Python开发之旅有一段时间了，这门课程可能是一个很好的开始。Python for Beginners课程是由Alex Bowers讲授的最全面的Python课程之一，这套网络教程非常容易学习。是的，它需要付一定的费用，但你是想单独学习，还是和其他30000名学生一起学？ 报名本课程的好处是你将被授权访问一个只有付费会员的论坛， Alex老师自己就驻扎在那，并且很乐意尽可能地帮你解决Python的问题。我的意思是，在这个清单里任何的资源都是值得的，因为你投入了一些成本额外收获了与人沟通的感觉会超越一切。 你可以使用优惠码：CODECONDO——它会给你一个固定的75%的折扣，但激活只能在2014年9月3日之前——所以要快点，您可以随时购买的这个课程然后用于以后的学习，不要把钱浪费在这笔交易上！ 译者注：翻译时距这篇原文的发布快两年了，所以想购买这套课程的朋友还得是原价——$99  Learn Python The Hard Way (笨办法学Python) 这本书绝对是学习Python最简单的方法。你会被如此简单的基础学习感到震惊，真实地感受到自己的学习历程，一步一步地获取新的知识。我也感到它非常鼓励学习者去尝试并创造出自己的程序。 代码可能会很少，但是它们肯定会有助于你更好的理解语言本身和语法。Python非常的流行，所以当你遇到了问题时，在类似Stack Exchange这样的网站里有可能会找到答案，遇到问题需要解决的话尽管地Google吧。 你会学到如何去： 在全平台上安装Python环境  写Python程序  理解Python语法和文档  像程序员一样思考  还有更多的东西   本书的HTML在线版本是完全免费的，大部分人使用的都是在线版。我希望你购买完整的书或者给予一些捐赠，毕竟作者花了很大的力气来完成它。如果你感觉视频更容易学习的话，它的高级版里就包含了视频。 The Python Challenge 如果你的编程生涯中从没做过这样的挑战，这可能会有点难度。但是配和上面介绍的那本书的话也不是很难，你应该尝试一下。它有33个关卡(谜题)，你可以用Python编程技巧解决。 几百万的人都在试着解决这个，即使你不能完成所有的关卡，你也会将学到很多新的东西，尤其是批判性思维和发散思维。你的大脑会过热，但这是在编程！ Learn Python Programming @ Codecademy 你可能看到许多“大牛”程序员骂这个网站，但那并不重要。我们想要做的是看看或者测试一门编程语言的基本语法是怎么执行的，以及调用函数时做了些什么，除了简单地输出‘Hello World!’。 在这个Codecademy的课程中你将会学到如何使用文件和循环，什么是函数以及他们能用来做什么。这些都是非常基础的，但是对初学者来说都是很好的东西。当需要帮助时有一个用来交流的论坛，但所有的东西都应该在你理解的范围之内。 你不需要安装任何工具，如果你想在你自己的电脑上重写一遍代码以便更好地理解它，你可能唯一需要的就是一个Notepad++编辑器。我就是这样做的，并且我向所有想学习编程的人都推荐Codecademy，不管是Python还是其他的语言。 Intro to Computer Science @ Udacity Udacity提供了一个很棒的免费课程，引你进入Python编程和学习关于搜索引擎的许多东西，以及如何编写你自己的小型网络爬虫。它的确是一个值得参与的课程，并且还提供了额外的指导和社区支持。 你可以报名成为付费学生得到导师的指导，并且可以在课程结束得到一个证书，或者你可以自己使用免费的课件学习，遗憾的是付费课堂的容量有限，所以你申请后需要加入名单等待。 它总共有11个课程，每一个都有讲解非常深入的文档。去它的官方主页查看更多的信息或者你想问的问题的答案。 Google’s Python Class Google它本身就被一大堆Python代码驱动着，只有他们提供社区支持并且愿意帮助其他人学习这门语言才更有意义。这是我曾经最喜欢看的指南和课程之一。它真的很详细，而且视频适合初学者，观看起来也很有趣。 去看几分钟它的第一堂课，看看你是否喜欢那个老师，然后决定是否开始学习Python!</description>
    </item>
    
  </channel>
</rss>